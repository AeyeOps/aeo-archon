services:
  archon-server:
    image: ${ARCHON_SERVER_IMAGE}
    container_name: archon-server
    ports:
      - "${ARCHON_SERVER_PORT:-8181}:${ARCHON_SERVER_PORT:-8181}"
    env_file:
      - .env
    environment:
      - SUPABASE_URL=${SUPABASE_URL_CONTAINER}
      - SUPABASE_SERVICE_KEY=${SUPABASE_SERVICE_KEY}
      - OPENAI_API_KEY=${OPENAI_API_KEY:-}
      - LOGFIRE_TOKEN=${LOGFIRE_TOKEN:-}
      - SERVICE_DISCOVERY_MODE=docker_compose
      - LOG_LEVEL=${LOG_LEVEL:-INFO}
      - ARCHON_SERVER_PORT=${ARCHON_SERVER_PORT:-8181}
      - ARCHON_MCP_PORT=${ARCHON_MCP_PORT:-8051}
      - ARCHON_AGENTS_PORT=${ARCHON_AGENTS_PORT:-8052}
      - AGENTS_ENABLED=${AGENTS_ENABLED:-false}
      - OTEL_EXPORTER_OTLP_ENDPOINT=${OTEL_EXPORTER_OTLP_ENDPOINT_CONTAINER}
      - OTEL_SERVICE_NAME=${OTEL_SERVICE_NAME_ARCHON_SERVER}
    networks:
      - app-network
    extra_hosts:
      - "host.docker.internal:host-gateway"
    healthcheck:
      test: ["CMD", "curl", "-fsS", "http://localhost:${ARCHON_SERVER_PORT:-8181}/health"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 40s

  archon-mcp:
    image: ${ARCHON_MCP_IMAGE}
    container_name: archon-mcp
    ports:
      - "${ARCHON_MCP_PORT:-8051}:${ARCHON_MCP_PORT:-8051}"
    env_file:
      - .env
    environment:
      - SUPABASE_URL=${SUPABASE_URL_CONTAINER}
      - SUPABASE_SERVICE_KEY=${SUPABASE_SERVICE_KEY}
      - LOGFIRE_TOKEN=${LOGFIRE_TOKEN:-}
      - SERVICE_DISCOVERY_MODE=docker_compose
      - TRANSPORT=sse
      - LOG_LEVEL=${LOG_LEVEL:-INFO}
      - API_SERVICE_URL=http://archon-server:${ARCHON_SERVER_PORT:-8181}
      - AGENTS_ENABLED=${AGENTS_ENABLED:-false}
      - AGENTS_SERVICE_URL=${AGENTS_SERVICE_URL:-http://archon-agents:${ARCHON_AGENTS_PORT:-8052}}
      - ARCHON_MCP_PORT=${ARCHON_MCP_PORT:-8051}
      - ARCHON_SERVER_PORT=${ARCHON_SERVER_PORT:-8181}
      - ARCHON_AGENTS_PORT=${ARCHON_AGENTS_PORT:-8052}
      - OTEL_EXPORTER_OTLP_ENDPOINT=${OTEL_EXPORTER_OTLP_ENDPOINT_CONTAINER}
      - OTEL_SERVICE_NAME=${OTEL_SERVICE_NAME_ARCHON_MCP}
    networks:
      - app-network
    depends_on:
      archon-server:
        condition: service_healthy
    extra_hosts:
      - "host.docker.internal:host-gateway"
    healthcheck:
      test: ["CMD", "sh", "-c", 'python - <<PY\nimport socket, os\ns=socket.socket(); s.connect(("localhost", int(os.environ.get("ARCHON_MCP_PORT","8051")))); s.close()\nPY']
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s

  archon-agents:
    profiles:
      - agents
    image: ${ARCHON_AGENTS_IMAGE}
    container_name: archon-agents
    ports:
      - "${ARCHON_AGENTS_PORT:-8052}:${ARCHON_AGENTS_PORT:-8052}"
    env_file:
      - .env
    environment:
      - SUPABASE_URL=${SUPABASE_URL_CONTAINER}
      - SUPABASE_SERVICE_KEY=${SUPABASE_SERVICE_KEY}
      - OPENAI_API_KEY=${OPENAI_API_KEY:-}
      - LOGFIRE_TOKEN=${LOGFIRE_TOKEN:-}
      - SERVICE_DISCOVERY_MODE=docker_compose
      - LOG_LEVEL=${LOG_LEVEL:-INFO}
      - ARCHON_AGENTS_PORT=${ARCHON_AGENTS_PORT:-8052}
      - ARCHON_SERVER_PORT=${ARCHON_SERVER_PORT:-8181}
      - OTEL_EXPORTER_OTLP_ENDPOINT=${OTEL_EXPORTER_OTLP_ENDPOINT_CONTAINER}
      - OTEL_SERVICE_NAME=${OTEL_SERVICE_NAME_ARCHON_AGENTS}
    networks:
      - app-network
    extra_hosts:
      - "host.docker.internal:host-gateway"
    healthcheck:
      test: ["CMD", "curl", "-fsS", "http://localhost:${ARCHON_AGENTS_PORT:-8052}/health"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 40s

  archon-frontend:
    image: ${ARCHON_FRONTEND_IMAGE}
    container_name: archon-ui
    ports:
      - "${ARCHON_UI_PORT:-3737}:3737"
    environment:
      - VITE_API_URL=http://${HOST:-localhost}:${ARCHON_SERVER_PORT:-8181}
      - VITE_ARCHON_SERVER_PORT=${ARCHON_SERVER_PORT:-8181}
      - ARCHON_SERVER_PORT=${ARCHON_SERVER_PORT:-8181}
      - HOST=${HOST:-localhost}
      - PROD=${PROD:-true}
      - VITE_ALLOWED_HOSTS=${VITE_ALLOWED_HOSTS:-}
      - VITE_SHOW_DEVTOOLS=${VITE_SHOW_DEVTOOLS:-false}
    networks:
      - app-network
    depends_on:
      archon-server:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3737"]
      interval: 30s
      timeout: 10s
      retries: 5

  openobserve:
    profiles:
      - observability
    image: public.ecr.aws/zinclabs/openobserve:latest
    container_name: openobserve
    ports:
      - "5080:5080"
    environment:
      - ZO_ROOT_USER_EMAIL=admin@archon.local
      - ZO_ROOT_USER_PASSWORD=archon-admin
      - ZO_DATA_DIR=/data
    volumes:
      - openobserve-data:/data
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "curl", "-fsS", "http://localhost:5080/"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 20s

networks:
  app-network:
    driver: bridge

volumes:
  openobserve-data:
    driver: local
